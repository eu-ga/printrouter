{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "The purpose of this application is to generate payload for printers\n\nSwagger json genereated using https://goswagger.io/generate/spec.html\nswagger generate spec -m -o swagger.json",
    "title": "Rockspoon Print Microservice",
    "version": "0.0.1"
  },
  "host": "localhost:6002",
  "basePath": "/",
  "paths": {
    "/print/delivery-takeout/{id}/receipt": {
      "get": {
        "description": "this endpoint returns a delivery and takeout receipt payload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printDeliveryTakeoutReceipt",
        "parameters": [
          {
            "type": "string",
            "description": "dinning party id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "printDeliveryTakeoutReceipt response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/kitchen-card": {
      "post": {
        "description": "this endpoint returns a kitchen order ticket",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printKitchenCard",
        "parameters": [
          {
            "description": "kitchen order data",
            "name": "Receipt Request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KitchenReceipt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "printKitchenCard response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/payment-invoice": {
      "post": {
        "description": "this endpoint returns a payment receipt",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printPaymentReceipt",
        "parameters": [
          {
            "description": "receipt to be printed",
            "name": "Receipt Request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PaymentReceipt"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "printPaymentReceipt response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/qsr/{id}/receipt": {
      "get": {
        "description": "this endpoint returns a qsr receipt payload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printQSRReceipt",
        "parameters": [
          {
            "type": "string",
            "description": "dinning party id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "printQSRReceipt response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/sales-summary-report": {
      "get": {
        "description": "this endpoint returns a a sales summary report payload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printSalesSummaryReport",
        "parameters": [
          {
            "type": "string",
            "description": "start date",
            "name": "startDate",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "end date",
            "name": "endDate",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "printSalesSummaryReport response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/table-bill": {
      "post": {
        "description": "this endpoint returns a table's bill payload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printTableBill",
        "parameters": [
          {
            "type": "string",
            "description": "dinning party id",
            "name": "id",
            "in": "query",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Bill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "printTableBill response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/test": {
      "get": {
        "description": "this endpoint returns a test payload",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printTest",
        "parameters": [
          {
            "type": "string",
            "description": "printer id",
            "name": "deviceId",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "flag for first time setup",
            "name": "firstSetup",
            "in": "query",
            "required": true
          },
          {
            "description": "test ordinary data",
            "name": "Test Request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "printTest response",
            "schema": {
              "$ref": "#/definitions/Payload"
            }
          }
        }
      }
    },
    "/print/venue/{id}/pos-printers": {
      "get": {
        "description": "this endpoint returns a printer's information for a venue",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Print"
        ],
        "operationId": "printVenuePrinters",
        "parameters": [
          {
            "type": "string",
            "description": "venue id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "printQSRReceipt response",
            "schema": {
              "$ref": "#/definitions/VenuePrinterPayload"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Address": {
      "description": "Address generic address model",
      "type": "object",
      "properties": {
        "address1": {
          "type": "string",
          "x-go-name": "Address1"
        },
        "address2": {
          "type": "string",
          "x-go-name": "Address2"
        },
        "city": {
          "type": "string",
          "x-go-name": "City"
        },
        "country": {
          "type": "string",
          "x-go-name": "Country"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "instructions": {
          "type": "string",
          "x-go-name": "Instructions"
        },
        "isDefault": {
          "type": "boolean",
          "x-go-name": "IsDefault"
        },
        "isValidated": {
          "type": "boolean",
          "x-go-name": "IsValidated"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "x-go-name": "Latitude"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "x-go-name": "Longitude"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "region": {
          "type": "string",
          "x-go-name": "Region"
        },
        "state": {
          "type": "string",
          "x-go-name": "State"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "timezone": {
          "type": "string",
          "x-go-name": "Timezone"
        },
        "zipcode": {
          "type": "string",
          "x-go-name": "ZipCode"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.common-model/address"
    },
    "Bill": {
      "description": "Bill is a collection of information that have to be printed in the bill",
      "type": "object",
      "properties": {
        "attendantName": {
          "type": "string",
          "x-go-name": "AttendantName"
        },
        "checks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Check"
          },
          "x-go-name": "Checks"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "orderType": {
          "$ref": "#/definitions/OrderType"
        },
        "restaurant": {
          "$ref": "#/definitions/RestaurantInfo"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "CardInfo": {
      "description": "CardInfo is information about the card",
      "type": "object",
      "properties": {
        "authorization": {
          "type": "string",
          "x-go-name": "Authorization"
        },
        "cardHolder": {
          "type": "string",
          "x-go-name": "Cardholder"
        },
        "number": {
          "type": "string",
          "x-go-name": "Number"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "Check": {
      "description": "Check to be printed",
      "type": "object",
      "properties": {
        "charges": {
          "$ref": "#/definitions/SubEntrySlice"
        },
        "customerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "dineInOptions": {
          "$ref": "#/definitions/DineInOptions"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntryItem"
          },
          "x-go-name": "Items"
        },
        "subtotal": {
          "$ref": "#/definitions/SimpleMoney"
        },
        "total": {
          "$ref": "#/definitions/SimpleMoney"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "CurrencySymbol": {
      "type": "string",
      "x-go-package": "github.com/rockspoon/rs.cor.common-money"
    },
    "CustomerInfo": {
      "description": "CustomerInfo is info about customere",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "DineInKitchenInfo": {
      "description": "DineInKitchenInfo is the info to impress in the kitchen print",
      "type": "object",
      "properties": {
        "runnerName": {
          "type": "string",
          "x-go-name": "RunnerName"
        },
        "sectionName": {
          "type": "string",
          "x-go-name": "SectionName"
        },
        "tables": {
          "type": "string",
          "x-go-name": "Tables"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "DineInOptions": {
      "description": "DineInOptions location about dinein",
      "type": "object",
      "properties": {
        "seats": {
          "type": "string",
          "x-go-name": "Seats"
        },
        "sectionName": {
          "type": "string",
          "x-go-name": "SectionName"
        },
        "tables": {
          "type": "string",
          "x-go-name": "Tables"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "EntryItem": {
      "description": "EntryItem an item in the bill",
      "type": "object",
      "properties": {
        "finalPrice": {
          "$ref": "#/definitions/SimpleMoney"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        },
        "subEntries": {
          "$ref": "#/definitions/SubEntrySlice"
        },
        "unityPrice": {
          "$ref": "#/definitions/SimpleMoney"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Weight"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "KitchenItem": {
      "description": "KitchenItem ordered item printable model",
      "type": "object",
      "properties": {
        "fireType": {
          "$ref": "#/definitions/TypesOfFire"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "quantity": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Quantity"
        },
        "seats": {
          "type": "string",
          "x-go-name": "Seats"
        },
        "subEntries": {
          "type": "string",
          "x-go-name": "SubEntries"
        },
        "weight": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Weight"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "KitchenReceipt": {
      "description": "KitchenReceipt kitchen printable model",
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "customerInfo": {
          "$ref": "#/definitions/CustomerInfo"
        },
        "dinerInfo": {
          "$ref": "#/definitions/DineInKitchenInfo"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KitchenItem"
          },
          "x-go-name": "Items"
        },
        "kitchen": {
          "type": "string",
          "x-go-name": "Kitchen"
        },
        "orderInfo": {
          "$ref": "#/definitions/OrderType"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "OrderType": {
      "type": "string",
      "title": "OrderType is the card type.",
      "x-go-package": "github.com/rockspoon/rs.com.order-model/model"
    },
    "Payload": {
      "description": "Payload printer payload wrapper",
      "type": "object",
      "properties": {
        "describeMessage": {
          "type": "string",
          "x-go-name": "DescribeMessage"
        },
        "ipAddress": {
          "type": "string",
          "x-go-name": "IPAddress"
        },
        "printPayload": {
          "type": "string",
          "x-go-name": "PrintPayload"
        },
        "printerModel": {
          "type": "string",
          "x-go-name": "PrinterModel"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "PaymentReceipt": {
      "description": "PaymentReceipt is the receipt to be printed",
      "type": "object",
      "properties": {
        "attendantName": {
          "type": "string",
          "x-go-name": "AttendantName"
        },
        "card": {
          "$ref": "#/definitions/CardInfo"
        },
        "check": {
          "$ref": "#/definitions/Check"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "x-go-name": "CreatedAt"
        },
        "orderType": {
          "$ref": "#/definitions/OrderType"
        },
        "paid": {
          "$ref": "#/definitions/SimpleMoney"
        },
        "paymentType": {
          "type": "string",
          "x-go-name": "PaymentType"
        },
        "restaurant": {
          "$ref": "#/definitions/RestaurantInfo"
        },
        "tips": {
          "$ref": "#/definitions/SimpleMoney"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "RestaurantInfo": {
      "description": "RestaurantInfo is the info about the restaurant",
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/Address"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "SimpleMoney": {
      "type": "object",
      "title": "SimpleMoney is a use for the front.",
      "properties": {
        "price": {
          "type": "number",
          "format": "double",
          "x-go-name": "Price"
        },
        "symbol": {
          "$ref": "#/definitions/CurrencySymbol"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.common-money"
    },
    "SubEntry": {
      "description": "SubEntry is description of an item",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "x-go-name": "Description"
        },
        "finalPrice": {
          "$ref": "#/definitions/SimpleMoney"
        },
        "index": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Index"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "unityPrice": {
          "$ref": "#/definitions/SimpleMoney"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "SubEntrySlice": {
      "description": "SubEntrySlice implements sort.Interface based on Index",
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubEntry"
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "TestBody": {
      "description": "TestBody is the test body request",
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "x-go-name": "IPAddress"
        },
        "printModel": {
          "type": "string",
          "x-go-name": "PrintModel"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "TypesOfFire": {
      "type": "string",
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    },
    "VenuePrinterPayload": {
      "description": "VenuePrinterPayload venue printer payload",
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "x-go-name": "DeviceID"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "x-go-name": "Metadata"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "preferredNetwork": {
          "type": "string",
          "x-go-name": "PreferredNetwork"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        },
        "type": {
          "type": "string",
          "x-go-name": "Type"
        },
        "uid": {
          "type": "string",
          "x-go-name": "UID"
        },
        "version": {
          "type": "string",
          "x-go-name": "Version"
        }
      },
      "x-go-package": "github.com/rockspoon/rs.cor.printer-ms/model"
    }
  }
}